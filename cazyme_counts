# Purpose: Identify, filter, and count CAZyme families and subfamilies within a protein fasta. Merge results of multiple genomes into a single CSV.
# Input is .proteins.fa file generated from funannotate annotate

#  find cazymes with coverage > 0.45 and e-value <1e-17 from proteins.fasta file using hmmer - these parameters are suggested for fungi
#  this takes about 3-8 hours depending on CAZy content - not sure multiple nodes/tasks if you're running a slurm really helps
# dbcan was installed in a Conda environment using instructions found here: https://github.com/linnabrown/run_dbcan

run_dbcan.py --out_pre yourspecies --hmm_cov 0.45 --hmm_eval 1e-17 --hmm_cpu 12 --db_dir /pl/active/fungi1/dbcan_db/ yourinputfile.proteins.fa protein

#  remove header line
#  use wc -l after this and other steps if you want to check if they worked
tail -n +2 hmmer.out > hmmer_step1.out

#  remove all columns except cazy name and gene
awk '{ print $1, $3}' hmmer_step1.out > hmmer_step2.out

#  remove any duplicate annotations on the same gene
awk '!x[$0]++' hmmer_step2.out > hmmer_step3.out

#  generate counts of cazys
 awk '{print $1}' hmmer_step3.out | sort | uniq -c > hmmer_step4.out
 
#  swap columns
 awk ' { t = $1; $1 = $2; $2 = t; print; } ' hmmer_step4.out > hmmer_step5.out

#  add species name as column header (format as G.species no space).
awk 'BEGIN{print "Species\tG.species"}1' hmmer_step5.out > yourspecies_cazy_counts.out

#  once you have all of your yourspecies_cazy_counts.out files, put them into a single folder.  
#  the next steps will merge them all into one file just like the CAZY output from Funannotate compare
#  make sure you have sourced ~/.hmmer for csvtk to work

#  convert *.out files to tab-delimited
ls *.out | parallel 'csvtk space2tab {} > {.}.tsv'

#  grab all possible values from the first column
#  check that nothing weird got added
cut -f 1 *.tsv | sort | uniq | tee all_cazys_step1.tsv

#  join files and fill blanks with 0s
csvtk join -H -t -k -t *.tsv --na 0 > all_cazys_counts_step2.tsv

#  clean .hmm from final result
sed 's/.hmm//' all_cazys_counts_step2.tsv > all_cazys_counts_step3.tsv

#  flip so species names are headers
tac all_cazys_counts_step3.tsv > all_cazys_counts_final.tsv 

#  convert to csv - possibly better for R?
csvtk tab2csv all_cazys_counts_final.tsv > all_cazys_counts_final.csv

-------------------------------------------------------------------

#  other commands that might help

#  filter by evalue
awk '$5 < 1e-17 { print $0 }' hmmer.out

#  filter by coverage 
awk '$9 > 0.45 { print $0 }' hmmer.out 

#  sum of your cazy counts
 awk '!x[$0]++' hmmer_step2.out

-------------------------------------------------------------------

